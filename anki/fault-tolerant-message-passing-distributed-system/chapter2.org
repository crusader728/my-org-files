* Item                                  :distributedsystem:reliablebroadcast:
:PROPERTIES:
:ANKI_DECK: fault-tolerant-message-passing-distributed-systems
:ANKI_NOTE_TYPE: Basic
:ANKI_NOTE_ID: 1673072273284
:END:
** Front
macro-operation $boardcast(m)$
** Back
*for each* $j \in \{1 \dots n\}$, *do* send $m$ to $p_j$ *end for*.

* Item                                  :distributedsystem:reliablebroadcast:
:PROPERTIES:
:ANKI_NOTE_TYPE: Basic
:ANKI_NOTE_ID: 1673072859246
:END:
** Front
best effort semantics for $boardcast(m)$ in $CAMP_{n,t}[\emptyset]$
** Back
- if the sender $p_i$ is correct, a copy of $m$ is sent to every process
- since the channels are reliable, every process (that has not crashed) receives a copy of $m$


* Item                                  :distributedsystem:reliablebroadcast:
:PROPERTIES:
:ANKI_NOTE_TYPE: Basic
:ANKI_NOTE_ID: 1673073156027
:END:

** Front
why $broadcast(m)$ is unreliable
** Back
- copies can be received at independent time instants due to asynchronous channels
- if sender crashes while executing $broadcast(m)$, an arbitrary subset of processes receives $m$.


* Item                                  :distributedsystem:reliablebroadcast:
:PROPERTIES:
:ANKI_NOTE_TYPE: Basic
:ANKI_NOTE_ID: 1673073286326
:END:

** Front
$URB\_broadcast(m)$
** Back
allows a process $p_i$ to send a message $m$ to all the processes (including itself)



* Item                                  :distributedsystem:reliablebroadcast:
:PROPERTIES:
:ANKI_NOTE_TYPE: Basic
:ANKI_NOTE_ID: 1673073367477
:END:

** Front
$URB\_deliver()$
** Back
allows a process to deliver a message that has been broadcast.



* Item                                  :distributedsystem:reliablebroadcast:
:PROPERTIES:
:ANKI_NOTE_TYPE: Basic
:ANKI_NOTE_ID: 1673074097324
:END:

** Front
difference between $URB\_broadcast$, $URB\_deliver$, $send$ and $receive$
** Back
[[file:./data/urb-broadcast-architectural-view.png]]



* Item                                                    :distributedsystem:reliablebroadcast:
:PROPERTIES:
:ANKI_NOTE_TYPE: Basic
:ANKI_NOTE_ID: 1673074482827
:END:

** Front
assumption of $URB\_broadcast$
** Back
- every message is unique
  - identity of a message $\langle m.sender,m.seq\_nb \rangle$
    - $m.sender$ is the identity of the sender process
    - $m.seq\_nb$ is a sequence number locally generated by $p_{m.sender}$

      
* Item                                  :distributedsystem:reliablebroadcast:
:PROPERTIES:
:ANKI_NOTE_TYPE: Basic
:ANKI_NOTE_ID: 1673074679598
:END:
** Front
URB-validity
** Back
if a process urb-delivers a message /m/, then /m/ has been previously urb-broadcast (by $p_{m.sender}$).


* Item                                  :distributedsystem:reliablebroadcast:
:PROPERTIES:
:ANKI_NOTE_TYPE: Basic
:ANKI_NOTE_ID: 1673074743154
:END:
** Front
URB-integrity
** Back
a process urb-delivers a message /m/ at most once
